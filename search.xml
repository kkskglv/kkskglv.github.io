<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2</title>
    <url>/2021/08/08/2/</url>
    <content><![CDATA[<p>图片录入测试1</p>
]]></content>
  </entry>
  <entry>
    <title>css</title>
    <url>/2021/10/31/css/</url>
    <content><![CDATA[<p>`属性值前面，冒号后面，保留一个空格<br>选择器和大括号中间保留空格<br>格式 hi（选择器）{color（属性） red（值）；（声明）font-size(属性）：25（声明）px（值）}</p>
<p>标签选择器<br>1 基础选择器<style><br>                  p{<br>                       color: green /表示将p标签的所有字符改为绿色   其中p为标签选项，可在后来的文本中使用</p>
<pre><code>                   font-size:100px /表示该字符宽度所占像素 单位为像素 
                &#125;
        &lt;style&gt;
</code></pre>
<p>   要规定可群体使用的标签，可以将标签独立出来<br>如<br>.font100<br>{<br>    font-size: 100px<br>}<br>需要注意，一个标签内只能嵌入一个class 其余的属性标签可用空格隔开并入一个class内<br>其中id选择器能达到同样效果，但只能一次性使用</p>
<p>通配符选择器，<br>*（用于选择全文本）<br>{<br>          标签</p>
<p>}</p>
<p>font字体<br>font-size大小   单位px<br>font-family字体<br>font-weight字体粗细<br>font-style字体风格</p>
<p>1.外部样式表<br>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 <link> 标签链接到样式表。 <link> 标签在（文档的）头部</p>
<head>
<link rel="styleheet" type="text/css herf="mystyle.css">
<head>

<p>内部样式表<br>当单个文档需要特殊样式时就该使用内部样式表，可用style标签在文档头部定义如</p>
<head>
<style>
hr {color:sienna;}
p {margin-left:20px;}
body {background-image:url("images/back40.gif");}
</style>


</p><p>多重样式<br>应用与同一文档的不同属性值</p>
<p>优先级内联&gt;内部&gt;外部&gt;浏览器默认<br>如</p>
<head>
    <!-- 外部样式 style.css -->
    <link rel="stylesheet" type="text/css" href="style.css">
    <!-- 设置：h3{color:blue;} -->
    <style type="text/css">
      /* 内部样式 */
      h3{color:green;}
    </style>
</head>
<body>
    <h3>测试！</h3>
</body>




<p>css背景颜色</p>
<style>
body
{
     background-color:颜色代码
}


如果单纯定义属性内颜色 则可以
h1 {background-color:#6495ed;}
p {background-color:#e0ffff;}
div {background-color:#b0c4de;}


背景图像
格式
body
{
      background-image：url（);
}


默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。

一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，如下所示
body
{
background-image:url('gradient2.png');
}
如果图像只在水平方向平铺 (repeat-x), 页面背景会更好些:

实例
body
{
background-image:url('gradient2.png');
background-repeat:repeat-x;
}



让背景图像不影响文本的排版

如果不想让图像平铺，你可以使用 background-repeat 属性:

实例
body
{
background-image:url('img_tree.png');
background-repeat:no-repeat;
}



以上实例中，背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，可以改变图像的位置。

可以利用 background-position 属性改变图像在背景中的位置:

实例
body
{
background-image:url('img_tree.png');
background-repeat:no-repeat;
background-position:right top;        right使文字与图片分隔开  


CSS 背景属性
Property    描述
background    简写属性，作用是将背景属性设置在一个声明中。
background-attachment    背景图像是否固定或者随着页面的其余部分滚动。
background-color    设置元素的背景颜色。
background-image    把图像设置为背景。
background-position    设置背景图像的起始位置。
background-repeat    设置背景图像是否及如何重复。
}



所有CSS文本属性。
属性    描述
color    设置文本颜色
direction    设置文本方向。
letter-spacing    设置字符间距
line-height    设置行高
text-align    对齐元素中的文本
text-decoration    向文本添加修饰
text-indent    缩进元素中文本的首行
text-shadow    设置文本阴影
text-transform    `控制元素中的字母`
unicode-bidi    设置或返回文本是否被重写 
vertical-align    设置元素的垂直对齐
white-space    设置元素中空白的处理方式
word-spacing    设置字间距`![](https://i.loli.net/2021/10/31/XeC5jLTDmz6bQia.png)

</style>]]></content>
  </entry>
  <entry>
    <title>这是我的第一篇博客</title>
    <url>/2021/08/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/10/11/html%E7%AC%A6%E5%8F%B7%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>`html常用标签<br>1标题字号标签：</p><h1>一级标题</h1>其中h为head缩写<p></p>
<h2>二级</h2>以此类推

<p>段落标签：</p><p>段落</p> 此标签自带空行<br>换行标签：<br>``<p></p>
<p>文本格式化标签：<br>加粗<strong></strong>或者<b></b>  strong更加强烈<br>倾斜<em></em>或者<i></i><br>删除线<del></del>或着s   s<br>下划线ins ins                     u u </p>
<p>div 和span标签<br>div稍大 用作超链接  是divsion    的缩写 用于布局，一行只能容纳一个 具体使用时一行字直接占一行</p>
<p>span稍小 ，将字符相隔开，一行可出现多个 </p>
<p>图像标签：<br><img><br><img src="/.com//图像url"><br>当图片无法显示时再图像url后加空格alt=“”用文字代替图片 加titlt=”“为图片增加标题<br>width给图像设定宽度     格式wedth=”“   height给图片增加高度，用法同理   border给图片增加边框，用法同理 单位：像素  注意属性之间用空格分开<br>tips：ait须在图像无法正常显示时才会显示，title无论什么时候都可以显示<br>&lt;img src=”” alt=“”图片描述 给搜索引擎看     title=“”给用户看</p>
<p>路径</p>
<p>相对路径<br>用于指定图片所处文件夹的位置<br>上一级：<img src="/.com//img.jpg">可以显示存在于上一个目录的图片  此外还有上上级 只需在../之前再加上../<br>下一级：&lt;img.src=”images/图片文件名”/&gt;  可以显示源目录下一级的文件 此外还有下下级 只需填写具体路径</p>
<p>绝对路径<br>直接填写图片具体路径 具体指盘符开始的路径<br>例如D:\web\img\logo.gif”  或完整的网络地址“https。。。。。”</p>
<p>超链接标签<br><a>表示超链接标签 作用是从一个页面到另一个页面<br>&lt;a herf=”跳转目标” target=”目标窗口的弹出方式“&gt;文本或图像</a><br>herf 用于指定连接的url地址，当标签是herf属性时，他就具有了超链接的功能<br>target 用于指定连接页面的打开方式 其中 self为默认值， blank为在新窗口中的打开方式。<br>herf=xxx.zip将直接下载压缩包，文件同理，网络元素的链接同理</p>
<p>锚点链接<br>格式：<a herf="index.html">首页</a><br>&lt;a herf=”#two名字随意&gt;第二集</p>
<p>下文&lt;h3 id=”名字随意“&gt;xxxxxx</p><h3> 注意下文不需要加锚点链接<br>上下文对应即构成锚点链接<p></p>
<p>html注释标签：<!--xxxxxxxx--></p>
<p>表格标签的基本使用<br>align 属性值：left    center  right   规定单元表格相对周围元素的对齐方式  </p>
<p>border“I”或”0”规定表格是否拥有边框</p>
<p>cellpadding像素值   ‘规定单元格边沿内容之间的空白 默认一像素</p>
<p>cellspacing像素值    规定单元格之间的空白   默认两像素</p>
<p>width像素值或百分比    规定表格的宽度</p>
<p>1.基本语法</p>
<table>
   <tr>
    <th>单元格内的文字</th><th>   th：文字居中加粗显示
    .....
    </th><td></td><td>
    </td></tr><tr>
</tr></table>

<p>tr表示行 td表示单元格 th表示表头单元格</p>
<p>表格的解构标签<br>主要标签  <thead> <tbody>分别表示表头和表身 内容必须包含tr标签</tbody></thead></p>
<p>合并单元格跨行合并  rowspan=“合并单元格的个数”<br>跨列合并  colspan=”合并单元格的个数“<br>跨行以最上侧的单元格为目标单元格写合并代码<br>跨列以最左侧单元格写合并·代码·<br>如<td colspan="2"> </td><td><br>最后删去单元格</td></p>
<p>有序列表                                         无序列表</p>
<ol>                                      <ul>
        <li>是傻逼</li>                         <li></li>
           ........                                         .......
          <li></li><li>                       </li></ul>
</ol>





<p>为某个网页设置背景音乐，使用的是bgsound标签。不过bgsound标签只适用于IE浏览器，在Firefox等浏览器中未必适用。</p>
<p>设置网页背景音乐时常用的方法除了使用bgsound标签，还有使用embed标签和object标签。</p>
<p>语法：</p>
<bgsound src="背景音乐的地址">

<p>说明：</p>
<p>loop=”2”表示重复2次，loop=”infinite”表示无限次循环播放，也可以使用loop=”-1”表示无限次循环播放。</p>
<p>在网页中插入音频、视频和flash都是使用embed标签。</p>
<p>语法：</p>
<p><embed src="多媒体文件地址" width="播放界面的宽度" height="播放界面的高度"></p>
<p>说明：</p>
<p>多媒体文件地址可以是相对地址，也可以是绝对地址。</p>
<p>width和height使用px作为单位</p>
<p>HTML5中音频播放标签</p>
 <audio controls>
    <source src="./media/snow.mp3" type="audio/mpeg">
  </audio>


<p>属性为aotoplay controls loop src</p>
<p>视频播放标签</p>
<p><video src="./media/video.mp4" controls="controls"></video></p>
<p>参数包括<br>aotoplay controls width height loop preload(aoto none 是否预先加载视频） src poster(加载等待的画面图片 img url=） muted</p>
<p>表单  标签：input textarea select option</p>
<p>input类型<br>属性值 （type=””)          说明<br>email                         限制用户必须输入email类型<br>url                             限制用户必须输入url<br>date                          限制用户必须输入日期类型<br>time                          限制用户必须输入时间类型<br>number                    限制用户必须输入数字类型<br>tel                              手机号码<br>search                        搜索框<br>color                           生成一个颜色选择表单<br>text                        单行文本框<br>password                密码文本框<br>button                按钮<br>reset                        重置按钮<br>image                        图像形式的提交按钮<br>radio                    单选按钮<br>checkbox                复选框<br>hiddon                   隐藏字段<br>file                      文件上传<br>单行文本框&lt;input type=”text” value=”默认文字”  size=”文本框长度” maxlength=“最多输入字符数”/&gt;</p>
<p>多行文本框</p>
<textarea rows="行数“ cols=“列数”>多行文本框内容</textarea


新增表单属性
required     required 表单拥有该属性表示内容不能为空
placeholder   提示文本   表单的提示信息 存在默认值将不显示
autofocus      aotofocus    自动聚焦属性 页面加载完成后自动聚焦到指定表单
autocomplete  autocomplete  off/on
multiple     multiple   可以多选文件提交

下拉列表由<select>标签和<option>标签配合使用。

语法：

<select multiple=" mutiple" size="可见列表项的数目">


    <option value="选项值" selected="selected">选项显示的内容</option>
    
    ……
    
    <option ="选项值">选项显示的内容</option>





选项列表
form
select 
   option    option
   。。。。。。。。
/select
form`
</textarea></bgsound></h3>]]></content>
  </entry>
</search>
